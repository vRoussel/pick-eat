- name: Define db dsn
  meta: noop
  vars:
    dsn: &db_dsn
      login_unix_socket: "{{ pg_unix_socket }}"
      login_user: "postgres"
      login_db: "postgres"

- block:
  - name: Install postgres packages
    apt:
      update_cache: true
      cache_valid_time: 86400
      name:
        - "postgresql-{{ pg_version }}"
    register: result

  - name: Check if fresh install
    set_fact:
      fresh_install: "{{ result.changed }}"

  - name: Install additional packages
    apt:
      update_cache: true
      cache_valid_time: 86400
      name:
        - "postgresql-client-{{ pg_version }}"
        - "python3-psycopg2"

- become_user: postgres
  block:
  - name: Remove default stuff in pg_hba.conf
    postgresql_pg_hba:
      dest: "{{ pg_hba_path }}"
      contype: "{{ item[0] }}"
      source: "{{ item[1] }}"
      databases: "{{ item[2] }}"
      users: "{{ item[3] }}"
      method: "{{ item[4] }}"
      state: absent
    loop:
      "{{ ['local', 'host'] | product(
      ['127.0.0.1/32', '::1/128'],
      ['all', 'replication'],
      ['all', 'postgres'],
      ['peer', 'md5']
      ) | list }}"
    when: fresh_install
    notify: Reload postgres conf

  - name: Setup pg_hba for postgres user
    postgresql_pg_hba:
      dest: "{{ pg_hba_path }}"
      contype: local
      databases: all
      method: peer
      users: postgres
    notify: Reload postgres conf

  - name: use scram-sha-256 password encryption
    postgresql_set:
      <<: *db_dsn
      name: password_encryption
      value: scram-sha-256
    notify: Reload postgres conf

  - name: listen on all addresses
    postgresql_set:
      <<: *db_dsn
      name: listen_addresses
      value: "*"
    notify: Restart postgres

  - name: Wait for postgres to accept connections
    community.postgresql.postgresql_ping:
      <<: *db_dsn
    register: postgres_status
    until: postgres_status.is_available
    retries: 10
    delay: 5
