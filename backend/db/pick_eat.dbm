<?xml version="1.0" encoding="UTF-8"?>
<!--
CAUTION: Do not modify this file unless you know what you are doing.
 Unexpected results may occur if the code is changed deliberately.
-->
<dbmodel pgmodeler-ver="1.1.0" use-changelog="false" max-obj-count="24"
	 last-position="0,0" last-zoom="1" scene-rect="0,0,2252.39,1284.52"
	 default-owner="postgres"
	 layers="Default layer"
	 active-layers="0"
	 layer-name-colors="#000000"
	 layer-rect-colors="#b4b4b4"
	 show-layer-names="false" show-layer-rects="false">
<role name="pickeat"
 createrole="true"
 login="true"
 sql-disabled="true">
</role>

<role name="pickeat_model"
 login="true"
 sql-disabled="true">
</role>

<role name="pickeat_app"
 login="true"
 sql-disabled="true">
</role>

<database name="pickeat" is-template="false" allow-conns="true">
</database>

<schema name="public" layers="0" fill-color="#e1e1e1" name-color="#000000" sql-disabled="true">
</schema>

<table name="categories" layers="0" collapse-mode="2" max-obj-count="2" z-value="0">
	<schema name="public"/>
	<role name="pickeat"/>
	<position x="1460" y="540"/>
	<column name="id" not-null="true"
	 identity-type="ALWAYS">
		<type name="integer" length="0"/>
	</column>
	<column name="name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<constraint name="categories_pk" type="pk-constr" table="public.categories">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="categories_uq_name" type="uq-constr" table="public.categories">
		<columns names="name" ref-type="src-columns"/>
	</constraint>
</table>

<table name="tags" layers="0" collapse-mode="2" max-obj-count="2" z-value="0">
	<schema name="public"/>
	<role name="pickeat"/>
	<position x="1460" y="360"/>
	<column name="id" not-null="true"
	 identity-type="ALWAYS">
		<type name="integer" length="0"/>
	</column>
	<column name="name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<constraint name="tags_pk" type="pk-constr" table="public.tags">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="tags_uq_name" type="uq-constr" table="public.tags">
		<columns names="name" ref-type="src-columns"/>
	</constraint>
</table>

<table name="recipes_tags" layers="0" collapse-mode="2" max-obj-count="3" z-value="0">
	<schema name="public"/>
	<role name="pickeat"/>
	<position x="980" y="360"/>
	<column name="tag_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="recipe_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<constraint name="recipes_tags_pk" type="pk-constr" table="public.recipes_tags">
		<columns names="tag_id,recipe_id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="ingredients" layers="0" collapse-mode="2" max-obj-count="3" z-value="0">
	<schema name="public"/>
	<role name="pickeat"/>
	<position x="1460" y="700"/>
	<column name="id" not-null="true"
	 identity-type="ALWAYS">
		<type name="integer" length="0"/>
	</column>
	<column name="name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="default_unit_id">
		<type name="integer" length="0"/>
	</column>
	<constraint name="ingredients_pk" type="pk-constr" table="public.ingredients">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="ingredients_uq_name" type="uq-constr" table="public.ingredients">
		<columns names="name" ref-type="src-columns"/>
	</constraint>
</table>

<table name="recipes_ingredients" layers="0" collapse-mode="2" max-obj-count="6" z-value="0">
	<schema name="public"/>
	<role name="pickeat"/>
	<position x="980" y="760"/>
	<column name="recipe_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="ingredient_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="quantity">
		<type name="real" length="0"/>
	</column>
	<column name="unit_id">
		<type name="integer" length="0"/>
	</column>
	<column name="ingredient_index" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<constraint name="recipes_ingredients_pk" type="pk-constr" table="public.recipes_ingredients">
		<columns names="recipe_id,ingredient_id" ref-type="src-columns"/>
	</constraint>
	<constraint name="recipes_ingredients_ck_qty" type="ck-constr" table="public.recipes_ingredients">
			<expression> <![CDATA[quantity > 0]]> </expression>
	</constraint>
</table>

<table name="recipes_categories" layers="0" collapse-mode="2" max-obj-count="3" z-value="0">
	<schema name="public"/>
	<role name="pickeat"/>
	<position x="980" y="540"/>
	<column name="recipe_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="category_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<constraint name="recipes_categories_pk" type="pk-constr" table="public.recipes_categories">
		<columns names="recipe_id,category_id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="units" layers="0" collapse-mode="2" max-obj-count="3" z-value="0">
	<schema name="public"/>
	<role name="pickeat"/>
	<position x="1460" y="880"/>
	<column name="id" not-null="true"
	 identity-type="ALWAYS">
		<type name="integer" length="0"/>
	</column>
	<column name="full_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="short_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<constraint name="units_pk" type="pk-constr" table="public.units">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="units_uq_full_name" type="uq-constr" table="public.units">
		<columns names="full_name" ref-type="src-columns"/>
	</constraint>
	<constraint name="units_uq_short_name" type="uq-constr" table="public.units">
		<columns names="short_name" ref-type="src-columns"/>
	</constraint>
</table>

<table name="seasons" layers="0" collapse-mode="2" max-obj-count="3" z-value="0">
	<schema name="public"/>
	<role name="pickeat"/>
	<position x="1460" y="1100"/>
	<column name="id" not-null="true"
	 identity-type="ALWAYS">
		<type name="integer" length="0"/>
	</column>
	<column name="name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="label" not-null="true">
		<type name="text" length="0"/>
	</column>
	<constraint name="seasons_pk" type="pk-constr" table="public.seasons">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="seasons_uq_name" type="uq-constr" table="public.seasons">
		<columns names="name" ref-type="src-columns"/>
	</constraint>
	<constraint name="seasons_uq_label" type="uq-constr" table="public.seasons">
		<columns names="label" ref-type="src-columns"/>
	</constraint>
</table>

<table name="recipes_seasons" layers="0" collapse-mode="2" max-obj-count="3" z-value="0">
	<schema name="public"/>
	<role name="pickeat"/>
	<position x="980" y="1100"/>
	<column name="recipe_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="season_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<constraint name="recipes_seasons_pk" type="pk-constr" table="public.recipes_seasons">
		<columns names="recipe_id,season_id" ref-type="src-columns"/>
	</constraint>
</table>

<extension name="pg_trgm">
	<schema name="public"/>
</extension>

<extension name="unaccent">
	<schema name="public"/>
</extension>

<opclass  name="gist_trgm_ops" index-type="gist" default="false" sql-disabled="true">
	<schema name="public"/>
	<role name="pickeat"/>
	<type name="smallint" length="0"/>
	<element type="storage">
		<type name="text" length="0"/>
	</element>
</opclass>

<table name="accounts" layers="0" collapse-mode="2" max-obj-count="8" z-value="0">
	<schema name="public"/>
	<role name="pickeat"/>
	<position x="280" y="400"/>
	<column name="id" not-null="true"
	 identity-type="ALWAYS">
		<type name="integer" length="0"/>
	</column>
	<column name="display_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="creation_date" not-null="true" default-value="CURRENT_DATE">
		<type name="date" length="0"/>
	</column>
	<column name="email" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="password" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="is_admin" not-null="true" default-value="false">
		<type name="bool" length="0"/>
	</column>
	<column name="is_validated" not-null="true" default-value="false">
		<type name="bool" length="0"/>
	</column>
	<constraint name="accounts_pk" type="pk-constr" table="public.accounts">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="accounts_uq_display_name" type="uq-constr" table="public.accounts">
		<columns names="display_name" ref-type="src-columns"/>
	</constraint>
	<constraint name="accounts_uq_email" type="uq-constr" table="public.accounts">
		<columns names="email" ref-type="src-columns"/>
	</constraint>
</table>

<table name="accounts_fav_recipes" layers="0" collapse-mode="2" max-obj-count="3" z-value="0">
	<schema name="public"/>
	<role name="pickeat"/>
	<position x="300" y="1080"/>
	<column name="account_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="recipe_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<constraint name="accounts_fav_recipes_pk" type="pk-constr" table="public.accounts_fav_recipes">
		<columns names="account_id,recipe_id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="recipes" layers="0" collapse-mode="2" pagination="true" attribs-page="0" ext-attribs-page="0" max-obj-count="15" z-value="0">
	<schema name="public"/>
	<role name="pickeat"/>
	<position x="440" y="680"/>
	<column name="id" not-null="true"
	 identity-type="ALWAYS">
		<type name="integer" length="0"/>
	</column>
	<column name="name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="notes" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="preparation_time_min" not-null="true">
		<type name="smallint" length="0" interval-type="HOUR TO MINUTE"/>
	</column>
	<column name="cooking_time_min" not-null="true">
		<type name="smallint" length="0" interval-type="HOUR TO MINUTE"/>
	</column>
	<column name="image" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="publication_date" not-null="true" default-value="CURRENT_DATE">
		<type name="date" length="0"/>
	</column>
	<column name="instructions" not-null="true">
		<type name="text" length="0" dimension="1"/>
	</column>
	<column name="n_shares" not-null="true">
		<type name="smallint" length="0"/>
	</column>
	<column name="shares_unit" not-null="true" default-value="'personnes'">
		<type name="text" length="0"/>
	</column>
	<column name="author_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="is_private" default-value="false">
		<type name="bool" length="0"/>
	</column>
	<column name="update_date" default-value="NULL">
		<type name="date" length="0"/>
	</column>
	<constraint name="recipes_pk" type="pk-constr" table="public.recipes">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="recipes_ck_times" type="ck-constr" table="public.recipes">
			<expression> <![CDATA[preparation_time_min >= 0 AND cooking_time_min >= 0]]> </expression>
	</constraint>
</table>

<function name="get_recipe_tags"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="STABLE"
		security-type="SECURITY INVOKER"
		parallel-type="PARALLEL SAFE"
		execution-cost="1"
		row-amount="1">
	<schema name="public"/>
	<role name="pickeat"/>
	<language name="sql"/>
	<return-type>
	<type name="public.tags" length="0" dimension="1"/>
	</return-type>
	<parameter name="recipe_id_in" in="true">
		<type name="integer" length="0"/>
	</parameter>
	<definition> <![CDATA[SELECT
    coalesce(
		array_agg(
			(t.id, t.name)::tags
		),
		'{}'
	) as tags
FROM
    tags AS t INNER JOIN recipes_tags AS rt
    ON t.id = rt.tag_id
WHERE rt.recipe_id = recipe_id_in]]> </definition>
</function>

<function name="get_recipe_categories"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="STABLE"
		security-type="SECURITY INVOKER"
		parallel-type="PARALLEL SAFE"
		execution-cost="1"
		row-amount="1">
	<schema name="public"/>
	<role name="pickeat"/>
	<language name="sql"/>
	<return-type>
	<type name="public.categories" length="0" dimension="1"/>
	</return-type>
	<parameter name="recipe_id_in" in="true">
		<type name="integer" length="0"/>
	</parameter>
	<definition> <![CDATA[SELECT
    coalesce(
		array_agg(
			(c.id, c.name)::categories
		),
		'{}'
	) as categories
FROM
    categories AS c INNER JOIN recipes_categories AS ct
    ON c.id = ct.category_id
WHERE ct.recipe_id = recipe_id_in]]> </definition>
</function>

<function name="get_recipe_seasons"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="STABLE"
		security-type="SECURITY INVOKER"
		parallel-type="PARALLEL SAFE"
		execution-cost="1"
		row-amount="1">
	<schema name="public"/>
	<role name="pickeat"/>
	<language name="sql"/>
	<return-type>
	<type name="public.seasons" length="0" dimension="1"/>
	</return-type>
	<parameter name="recipe_id_in" in="true">
		<type name="integer" length="0"/>
	</parameter>
	<definition> <![CDATA[SELECT
    coalesce(
		array_agg(
			(s.id, s.name, s.label)::seasons
		),
		'{}'
	) as seasons
FROM
    seasons AS s INNER JOIN recipes_seasons AS rs
    ON s.id = rs.season_id
WHERE rs.recipe_id = recipe_id_in]]> </definition>
</function>

<index name="trgm_idx" table="public.recipes"
	 concurrent="false" unique="false" fast-update="false" buffering="false" nulls-not-distinct="false"
	 index-type="gist" factor="0">
		<idxelement use-sorting="false">
			<column name="name"/>
			<opclass  signature="public.gist_trgm_ops USING gist"/>
		</idxelement>
</index>

<table name="diets" layers="0" collapse-mode="2" max-obj-count="3" z-value="0">
	<schema name="public"/>
	<role name="pickeat"/>
	<position x="1460" y="140"/>
	<column name="id" not-null="true"
	 identity-type="ALWAYS">
		<type name="integer" length="0"/>
	</column>
	<column name="name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="label">
		<type name="text" length="0"/>
	</column>
	<constraint name="diets_pk" type="pk-constr" table="public.diets">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="diets_uq_name" type="uq-constr" table="public.diets">
		<columns names="name" ref-type="src-columns"/>
	</constraint>
	<constraint name="diets_uq_label" type="uq-constr" table="public.diets">
		<columns names="label" ref-type="src-columns"/>
	</constraint>
</table>

<table name="recipes_diets" layers="0" collapse-mode="2" max-obj-count="3" z-value="0">
	<schema name="public"/>
	<role name="pickeat"/>
	<position x="980" y="180"/>
	<column name="recipe_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="diet_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<constraint name="recipes_diets_pk" type="pk-constr" table="public.recipes_diets">
		<columns names="recipe_id,diet_id" ref-type="src-columns"/>
	</constraint>
</table>

<function name="get_recipe_diets"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="STABLE"
		security-type="SECURITY INVOKER"
		parallel-type="PARALLEL SAFE"
		execution-cost="1"
		row-amount="1">
	<schema name="public"/>
	<role name="pickeat"/>
	<language name="sql"/>
	<return-type>
	<type name="public.diets" length="0" dimension="1"/>
	</return-type>
	<parameter name="recipe_id_in" in="true">
		<type name="integer" length="0"/>
	</parameter>
	<definition> <![CDATA[SELECT
    coalesce(
		array_agg(
			(d.id, d.name, d.label)::diets
		),
		'{}'
	) as diets
FROM
    diets AS d INNER JOIN recipes_diets AS rd
    ON d.id = rd.diet_id
WHERE rd.recipe_id = recipe_id_in]]> </definition>
</function>

<table name="account_validation_tokens" layers="0" collapse-mode="2" max-obj-count="3" z-value="0">
	<schema name="public"/>
	<role name="pickeat"/>
	<position x="480" y="40"/>
	<column name="account_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="token" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="valid_until" not-null="true">
		<type name="timestamptz" length="0"/>
	</column>
	<constraint name="account_validation_tokens_pk" type="pk-constr" table="public.account_validation_tokens">
		<columns names="account_id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="password_reset_tokens" layers="0" collapse-mode="2" max-obj-count="3" z-value="0">
	<schema name="public"/>
	<role name="pickeat"/>
	<position x="500" y="220"/>
	<column name="account_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="token" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="valid_until" not-null="true">
		<type name="timestamptz" length="0"/>
	</column>
	<constraint name="password_reset_tokens_pk" type="pk-constr" table="public.password_reset_tokens">
		<columns names="account_id" ref-type="src-columns"/>
	</constraint>
</table>

<function name="is_recipe_in_account_favs"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		parallel-type="PARALLEL UNSAFE"
		execution-cost="1"
		row-amount="1">
	<schema name="public"/>
	<role name="pickeat"/>
	<language name="sql"/>
	<return-type>
	<type name="bool" length="0"/>
	</return-type>
	<parameter name="recipe_id_in" in="true">
		<type name="integer" length="0"/>
	</parameter>
	<parameter name="account_id_in" in="true">
		<type name="integer" length="0"/>
	</parameter>
	<definition> <![CDATA[SELECT EXISTS(
    SELECT FROM accounts_fav_recipes
    WHERE
        recipe_id = recipe_id_in
        AND account_id = account_id_in
);
]]> </definition>
</function>

<function name="get_unit"
		window-func="false"
		returns-setof="false"
		behavior-type="RETURNS NULL ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		parallel-type="PARALLEL UNSAFE"
		execution-cost="1"
		row-amount="0">
	<schema name="public"/>
	<role name="pickeat"/>
	<comment> <![CDATA[If unit_id is null return null
else return (select * from units)]]> </comment>
	<language name="sql"/>
	<return-type>
	<type name="public.units" length="0"/>
	</return-type>
	<parameter name="unit_id_in" in="true">
		<type name="integer" length="0"/>
	</parameter>
	<definition> <![CDATA[SELECT *
FROM units u
WHERE u.id = unit_id_in]]> </definition>
</function>

<usertype name="qingredient" configuration="composite">
	<schema name="public"/>
	<role name="pickeat"/>
	<typeattrib name="id">
		<type name="integer" length="0"/>
	</typeattrib>
	<typeattrib name="name">
		<type name="text" length="0"/>
	</typeattrib>
	<typeattrib name="quantity">
		<type name="real" length="0"/>
	</typeattrib>
	<typeattrib name="unit">
		<type name="public.units" length="0"/>
	</typeattrib>
</usertype>

<function name="get_recipe_ingredients"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="STABLE"
		security-type="SECURITY INVOKER"
		parallel-type="PARALLEL SAFE"
		execution-cost="1"
		row-amount="1">
	<schema name="public"/>
	<role name="pickeat"/>
	<language name="sql"/>
	<return-type>
	<type name="public.qingredient" length="0" dimension="1"/>
	</return-type>
	<parameter name="recipe_id_in" in="true">
		<type name="integer" length="0"/>
	</parameter>
	<definition> <![CDATA[SELECT
    coalesce(
    array_agg(
        (
            i.id,
            i.name,
            ri.quantity,
            get_unit(ri.unit_id)
        )::qingredient
		ORDER BY ri.ingredient_index
    ),
    '{}'
) as ingredients
FROM
    ingredients AS i INNER JOIN recipes_ingredients AS ri
    ON i.id = ri.ingredient_id
WHERE ri.recipe_id = recipe_id_in]]> </definition>
</function>

<view name="ingredients_full" layers="0" collapse-mode="2" max-obj-count="3" z-value="0">
	<schema name="public"/>
	<role name="pickeat"/>
	<position x="1940" y="280"/>
	<reference object="public.ingredients.id" type="column" ref-name="id1" use-signature="true" format-name="true"/>
	<reference object="public.ingredients.name" type="column" ref-name="name2" use-signature="true" format-name="true"/>
	<reference object="public.ingredients" type="table" ref-name="ingredients1" ref-alias="i" use-signature="true" format-name="true"/>
	<simplecol name="id" alias="id" type="integer"/>
	<simplecol name="name" alias="name" type="text"/>
	<simplecol name="default_unit" alias="default_unit" type="text"/>
	<definition> <![CDATA[SELECT
   i.id,
   i.name,
   get_unit(i.default_unit_id) AS default_unit
FROM
   public.ingredients AS i;;]]> </definition>
</view>

<relationship name="rel_ingredients_full_ingredients" type="reltv" layers="0"
	 src-table="public.ingredients_full"
	 dst-table="public.ingredients"
	 src-required="false" dst-required="false"/>

<view name="recipes_full" layers="0" collapse-mode="2" max-obj-count="1" z-value="0">
	<schema name="public"/>
	<role name="pickeat"/>
	<position x="1960" y="500"/>
	<reference object="public.recipes" type="table" ref-name="recipes1" ref-alias="r" use-signature="true" format-name="true"/>
	<simplecol name="id" alias="id" type="integer"/>
	<simplecol name="name" alias="name" type="text"/>
	<simplecol name="notes" alias="notes" type="text"/>
	<simplecol name="preparation_time_min" alias="preparation_time_min" type="smallint"/>
	<simplecol name="cooking_time_min" alias="cooking_time_min" type="smallint"/>
	<simplecol name="image" alias="image" type="text"/>
	<simplecol name="publication_date" alias="publication_date" type="date"/>
	<simplecol name="instructions" alias="instructions" type="text[]"/>
	<simplecol name="n_shares" alias="n_shares" type="smallint"/>
	<simplecol name="shares_unit" alias="shares_unit" type="text"/>
	<simplecol name="author_id" alias="author_id" type="integer"/>
	<simplecol name="is_private" alias="is_private" type="bool"/>
	<simplecol name="update_date" alias="update_date" type="date"/>
	<simplecol name="tags" alias="tags" type="text"/>
	<simplecol name="categories" alias="categories" type="text"/>
	<simplecol name="diets" alias="diets" type="text"/>
	<simplecol name="seasons" alias="seasons" type="text"/>
	<simplecol name="ingredients" alias="ingredients" type="text"/>
	<definition> <![CDATA[SELECT
   r.*,
   get_recipe_tags(r.id) AS tags,
   get_recipe_categories(r.id) AS categories,
   get_recipe_diets(r.id) AS diets,
   get_recipe_seasons(r.id) AS seasons,
   get_recipe_ingredients(r.id) AS ingredients
FROM
   public.recipes AS r;;]]> </definition>
</view>

<relationship name="rel_recipes_full_recipes" type="reltv" layers="0"
	 src-table="public.recipes_full"
	 dst-table="public.recipes"
	 src-required="false" dst-required="false"/>

<function name="get_weekly_seed"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		parallel-type="PARALLEL UNSAFE"
		execution-cost="1"
		row-amount="1">
	<schema name="public"/>
	<role name="pickeat"/>
	<language name="plpgsql"/>
	<return-type>
	<type name="integer" length="0"/>
	</return-type>
	<definition> <![CDATA[declare
    ret integer;
    idx integer;
    primes integer[] := ARRAY[7, 11, 13, 17, 19, 23, 29, 31, 37, 41];
begin
    idx = extract('week' from current_date + interval '7 days') % ARRAY_LENGTH(primes, 1);
    return primes[idx];
end;]]> </definition>
</function>

<table name="accounts_data" layers="0" collapse-mode="2" max-obj-count="3" z-value="0">
	<schema name="public"/>
	<role name="pickeat"/>
	<position x="20" y="220"/>
	<column name="account_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="key" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="data" not-null="true">
		<type name="json" length="0"/>
	</column>
	<constraint name="accounts_saved_data_pk" type="pk-constr" table="public.accounts_data">
		<columns names="account_id,key" ref-type="src-columns"/>
	</constraint>
</table>

<constraint name="recipes_tags_fk_tag_id" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="CASCADE" ref-table="public.tags" table="public.recipes_tags">
	<columns names="tag_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="recipes_tags_fk_recipe_id" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="CASCADE" ref-table="public.recipes" table="public.recipes_tags">
	<columns names="recipe_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="ingredients_fk_default_unit" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="NO ACTION" ref-table="public.units" table="public.ingredients">
	<columns names="default_unit_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="recipes_ingredients_fk_recipe_id" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="CASCADE" ref-table="public.recipes" table="public.recipes_ingredients">
	<columns names="recipe_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="recipes_ingredients_fk_ingredient_id" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="NO ACTION" ref-table="public.ingredients" table="public.recipes_ingredients">
	<columns names="ingredient_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="recipes_ingredients_fk_unit_id" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="NO ACTION" ref-table="public.units" table="public.recipes_ingredients">
	<columns names="unit_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="recipes_categories_fk_recipe_id" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="CASCADE" ref-table="public.recipes" table="public.recipes_categories">
	<columns names="recipe_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="recipes_categories_fk_category_id" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="CASCADE" ref-table="public.categories" table="public.recipes_categories">
	<columns names="category_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="recipes_seasons_fk_season_id" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="CASCADE" ref-table="public.seasons" table="public.recipes_seasons">
	<columns names="season_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="recipes_seasons_fk_recipe_id" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="CASCADE" ref-table="public.recipes" table="public.recipes_seasons">
	<columns names="recipe_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="accounts_fav_recipes_fk_account_id" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="CASCADE" del-action="CASCADE" ref-table="public.accounts" table="public.accounts_fav_recipes">
	<columns names="account_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="accounts_fav_recipes_fk_recipe_id" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="CASCADE" del-action="CASCADE" ref-table="public.recipes" table="public.accounts_fav_recipes">
	<columns names="recipe_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="recipes_fk_author_id" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="CASCADE" del-action="NO ACTION" ref-table="public.accounts" table="public.recipes">
	<columns names="author_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="recipes_diets_fk_recipe_id" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="CASCADE" del-action="CASCADE" ref-table="public.recipes" table="public.recipes_diets">
	<columns names="recipe_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="recipes_diets_fk_diet_id" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="CASCADE" del-action="CASCADE" ref-table="public.diets" table="public.recipes_diets">
	<columns names="diet_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="account_validation_tokens_fk_account_id" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="CASCADE" del-action="CASCADE" ref-table="public.accounts" table="public.account_validation_tokens">
	<columns names="account_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="password_reset_tokens_fk_account_id" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="CASCADE" del-action="CASCADE" ref-table="public.accounts" table="public.password_reset_tokens">
	<columns names="account_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="accounts_saved_data_fk_account_id" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="CASCADE" del-action="CASCADE" ref-table="public.accounts" table="public.accounts_data">
	<columns names="account_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<relationship name="rel_recipes_tags_tags" type="relfk" layers="0"
	 src-table="public.recipes_tags"
	 dst-table="public.tags" reference-fk="recipes_tags_fk_tag_id"
	 src-required="false" dst-required="true"/>

<relationship name="rel_recipes_tags_recipes" type="relfk" layers="0"
	 src-table="public.recipes_tags"
	 dst-table="public.recipes" reference-fk="recipes_tags_fk_recipe_id"
	 src-required="false" dst-required="true"/>

<relationship name="rel_ingredients_units" type="relfk" layers="0"
	 src-table="public.ingredients"
	 dst-table="public.units" reference-fk="ingredients_fk_default_unit"
	 src-required="false" dst-required="false"/>

<relationship name="rel_recipes_ingredients_recipes" type="relfk" layers="0"
	 src-table="public.recipes_ingredients"
	 dst-table="public.recipes" reference-fk="recipes_ingredients_fk_recipe_id"
	 src-required="false" dst-required="true"/>

<relationship name="rel_recipes_ingredients_ingredients" type="relfk" layers="0"
	 src-table="public.recipes_ingredients"
	 dst-table="public.ingredients" reference-fk="recipes_ingredients_fk_ingredient_id"
	 src-required="false" dst-required="true"/>

<relationship name="rel_recipes_ingredients_units" type="relfk" layers="0"
	 src-table="public.recipes_ingredients"
	 dst-table="public.units" reference-fk="recipes_ingredients_fk_unit_id"
	 src-required="false" dst-required="false"/>

<relationship name="rel_recipes_categories_recipes" type="relfk" layers="0"
	 src-table="public.recipes_categories"
	 dst-table="public.recipes" reference-fk="recipes_categories_fk_recipe_id"
	 src-required="false" dst-required="true"/>

<relationship name="rel_recipes_categories_categories" type="relfk" layers="0"
	 src-table="public.recipes_categories"
	 dst-table="public.categories" reference-fk="recipes_categories_fk_category_id"
	 src-required="false" dst-required="true"/>

<relationship name="rel_recipes_seasons_seasons" type="relfk" layers="0"
	 src-table="public.recipes_seasons"
	 dst-table="public.seasons" reference-fk="recipes_seasons_fk_season_id"
	 src-required="false" dst-required="true"/>

<relationship name="rel_recipes_seasons_recipes" type="relfk" layers="0"
	 src-table="public.recipes_seasons"
	 dst-table="public.recipes" reference-fk="recipes_seasons_fk_recipe_id"
	 src-required="false" dst-required="true"/>

<relationship name="rel_accounts_fav_recipes_accounts" type="relfk" layers="0"
	 src-table="public.accounts_fav_recipes"
	 dst-table="public.accounts" reference-fk="accounts_fav_recipes_fk_account_id"
	 src-required="false" dst-required="true"/>

<relationship name="rel_accounts_fav_recipes_recipes" type="relfk" layers="0"
	 src-table="public.accounts_fav_recipes"
	 dst-table="public.recipes" reference-fk="accounts_fav_recipes_fk_recipe_id"
	 src-required="false" dst-required="true"/>

<relationship name="rel_recipes_accounts" type="relfk" layers="0"
	 src-table="public.recipes"
	 dst-table="public.accounts" reference-fk="recipes_fk_author_id"
	 src-required="false" dst-required="true"/>

<relationship name="rel_recipes_diets_recipes" type="relfk" layers="0"
	 src-table="public.recipes_diets"
	 dst-table="public.recipes" reference-fk="recipes_diets_fk_recipe_id"
	 src-required="false" dst-required="true"/>

<relationship name="rel_recipes_diets_diets" type="relfk" layers="0"
	 src-table="public.recipes_diets"
	 dst-table="public.diets" reference-fk="recipes_diets_fk_diet_id"
	 src-required="false" dst-required="true"/>

<relationship name="rel_account_validation_tokens_accounts" type="relfk" layers="0"
	 src-table="public.account_validation_tokens"
	 dst-table="public.accounts" reference-fk="account_validation_tokens_fk_account_id"
	 src-required="false" dst-required="true"/>

<relationship name="rel_password_reset_tokens_accounts" type="relfk" layers="0"
	 src-table="public.password_reset_tokens"
	 dst-table="public.accounts" reference-fk="password_reset_tokens_fk_account_id"
	 src-required="false" dst-required="true"/>

<relationship name="rel_accounts_data_accounts" type="relfk" layers="0"
	 src-table="public.accounts_data"
	 dst-table="public.accounts" reference-fk="accounts_saved_data_fk_account_id"
	 src-required="false" dst-required="true"/>

</dbmodel>
